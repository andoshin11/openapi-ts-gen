// THIS FILE IS GENERATED BY CODE GENERATOR. DO NOT CHANGE MANUALLY.
/* tslint:disable */
/* eslint-disable */
<%_ if (schema.properties) {
      Object.entries(schema.properties).forEach(([_name, _schema]) => { _%>
<%- include('./ref', { name: _name, schema: _schema }) _%>
<%_   })
    };
    if (schema.isRef && schema.type !== name) { _%>
import <%= schema.type _%> from "./<%= schema.type _%>";
<%_ }; _%>

<%_ if (schema.isArray) {
      if (schema.isRef) { _%>
type <%= name _%> = <%= schema.type _%>[];
export default <%= name _%>;
<%_   } else if (Object.keys(schema.properties).length) { _%>
export interface <%= name _%>List {
<%_     Object.entries(schema.properties).forEach(([_name, _schema]) => { _%>
<%- include('./property', { name: _name, schema: _schema }) _%>
<%_ }) _%>
}
<%_   };
    } else if (schema.enum.length) { _%>
enum <%= name _%> {
<%_ schema.enum.forEach((val, index) => { _%>
  <%= val _%> = "<%= val _%>"<%_ if (index !== 0) {%>,<%_ } _%>
<%_ })%>
}

export default <%= name _%>
<%_ } else { _%>
export default interface <%= name %> {
<%_ if (Object.keys(schema.properties)) { _%>
<%_     Object.entries(schema.properties).forEach(([_name, _schema]) => { _%>
  <%- include('./property', { name: _name, schema: _schema }) _%>
<%_ }) _%>
<%_ } _%>
}
<%_ } _%>
